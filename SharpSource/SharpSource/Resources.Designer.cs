//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharpSource {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SharpSource.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use await to get the result of a Task..
        /// </summary>
        internal static string AccessingTaskResultWithoutAwaitAnalyzerMessage {
            get {
                return ResourceManager.GetString("AccessingTaskResultWithoutAwaitAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use await to get the result of an asynchronous operation.
        /// </summary>
        internal static string AccessingTaskResultWithoutAwaitAnalyzerTitle {
            get {
                return ResourceManager.GetString("AccessingTaskResultWithoutAwaitAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arithmetic.
        /// </summary>
        internal static string ArithmeticCategory {
            get {
                return ResourceManager.GetString("ArithmeticCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async.
        /// </summary>
        internal static string AsyncCategory {
            get {
                return ResourceManager.GetString("AsyncCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} is marked as async but has a void return type.
        /// </summary>
        internal static string AsyncMethodWithVoidReturnTypeMessage {
            get {
                return ResourceManager.GetString("AsyncMethodWithVoidReturnTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async methods should return a Task to make them awaitable.
        /// </summary>
        internal static string AsyncMethodWithVoidReturnTypeTitle {
            get {
                return ResourceManager.GetString("AsyncMethodWithVoidReturnTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async overload available for {0}.
        /// </summary>
        internal static string AsyncOverloadsAvailableMessage {
            get {
                return ResourceManager.GetString("AsyncOverloadsAvailableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An async overload is available.
        /// </summary>
        internal static string AsyncOverloadsAvailableTitle {
            get {
                return ResourceManager.GetString("AsyncOverloadsAvailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attributes.
        /// </summary>
        internal static string AttributesCategory {
            get {
                return ResourceManager.GetString("AttributesCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A catch clause catches NullReferenceException. Consider using != null or null propagation instead..
        /// </summary>
        internal static string CatchNullReferenceExceptionAnalyzerMessage {
            get {
                return ResourceManager.GetString("CatchNullReferenceExceptionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies no NullReferenceException is caught..
        /// </summary>
        internal static string CatchNullReferenceExceptionAnalyzerTitle {
            get {
                return ResourceManager.GetString("CatchNullReferenceExceptionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition is always {0}..
        /// </summary>
        internal static string ConditionIsConstantAnalyzerMessage {
            get {
                return ResourceManager.GetString("ConditionIsConstantAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The condition is a constant and thus unnecessary..
        /// </summary>
        internal static string ConditionIsConstantAnalyzerTitle {
            get {
                return ResourceManager.GetString("ConditionIsConstantAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use DateTime.UtcNow to get a consistent value.
        /// </summary>
        internal static string DateTimeNowAnalyzerMessage {
            get {
                return ResourceManager.GetString("DateTimeNowAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateTime.Now was referenced.
        /// </summary>
        internal static string DateTimeNowAnalyzerTitle {
            get {
                return ResourceManager.GetString("DateTimeNowAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operands in the divisive expression {0} are both integers and result in an implicit rounding..
        /// </summary>
        internal static string DivideIntegerByIntegerAnalyzerMessage {
            get {
                return ResourceManager.GetString("DivideIntegerByIntegerAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operands of a divisive expression are both integers and result in an implicit rounding..
        /// </summary>
        internal static string DivideIntegerByIntegerAnalyzerTitle {
            get {
                return ResourceManager.GetString("DivideIntegerByIntegerAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement Equals() and GetHashCode() methods of type {0} for use in a collection..
        /// </summary>
        internal static string ElementaryMethodsOfTypeInCollectionNotOverriddenAnalyzerMessage {
            get {
                return ResourceManager.GetString("ElementaryMethodsOfTypeInCollectionNotOverriddenAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement Equals() and GetHashcode() methods for a type used in a collection..
        /// </summary>
        internal static string ElementaryMethodsOfTypeInCollectionNotOverriddenAnalyzerTitle {
            get {
                return ResourceManager.GetString("ElementaryMethodsOfTypeInCollectionNotOverriddenAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enum can have [Flags] attribute..
        /// </summary>
        internal static string EnumCanHaveFlagsAttributeAnalyzerMessage {
            get {
                return ResourceManager.GetString("EnumCanHaveFlagsAttributeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gives an enum the `[Flags]` attribute..
        /// </summary>
        internal static string EnumCanHaveFlagsAttributeAnalyzerTitle {
            get {
                return ResourceManager.GetString("EnumCanHaveFlagsAttributeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equals() and GetHashcode() must be implemented together..
        /// </summary>
        internal static string EqualsAndGetHashcodeNotImplementedTogetherAnalyzerMessage {
            get {
                return ResourceManager.GetString("EqualsAndGetHashcodeNotImplementedTogetherAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement Equals() and GetHashcode() together..
        /// </summary>
        internal static string EqualsAndGetHashcodeNotImplementedTogetherAnalyzerTitle {
            get {
                return ResourceManager.GetString("EqualsAndGetHashcodeNotImplementedTogetherAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exceptions.
        /// </summary>
        internal static string ExceptionsCategory {
            get {
                return ResourceManager.GetString("ExceptionsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from the {0} method in type {1}.
        /// </summary>
        internal static string ExceptionThrownFromDisposeAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromDisposeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a Dispose method..
        /// </summary>
        internal static string ExceptionThrownFromDisposeAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromDisposeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from the {0} operator between {1} and {2} in type {3}.
        /// </summary>
        internal static string ExceptionThrownFromEqualityOperatorAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromEqualityOperatorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from an equality operator..
        /// </summary>
        internal static string ExceptionThrownFromEqualityOperatorAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromEqualityOperatorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from the Equals({0}) method in type {1}.
        /// </summary>
        internal static string ExceptionThrownFromEqualsAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromEqualsAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from an Equals() method..
        /// </summary>
        internal static string ExceptionThrownFromEqualsAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromEqualsAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from the finalizer method in type {0}.
        /// </summary>
        internal static string ExceptionThrownFromFinalizerAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromFinalizerAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a finalizer method..
        /// </summary>
        internal static string ExceptionThrownFromFinalizerAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromFinalizerAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a finally block.
        /// </summary>
        internal static string ExceptionThrownFromFinallyBlockAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromFinallyBlockAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a finally block..
        /// </summary>
        internal static string ExceptionThrownFromFinallyBlockAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromFinallyBlockAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from the GetHashCode() method in type {0}.
        /// </summary>
        internal static string ExceptionThrownFromGetHashCodeAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromGetHashCodeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a GetHashCode() method..
        /// </summary>
        internal static string ExceptionThrownFromGetHashCodeAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromGetHashCodeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from implicit operator {0} in type {1}.
        /// </summary>
        internal static string ExceptionThrownFromImplicitOperatorAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromImplicitOperatorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from an implicit operator..
        /// </summary>
        internal static string ExceptionThrownFromImplicitOperatorAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromImplicitOperatorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from the getter of property {0}.
        /// </summary>
        internal static string ExceptionThrownFromPropertyGetterAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromPropertyGetterAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a property getter..
        /// </summary>
        internal static string ExceptionThrownFromPropertyGetterAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromPropertyGetterAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from {0} its static constructor.
        /// </summary>
        internal static string ExceptionThrownFromStaticConstructorAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExceptionThrownFromStaticConstructorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception is thrown from a static constructor..
        /// </summary>
        internal static string ExceptionThrownFromStaticConstructorAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExceptionThrownFromStaticConstructorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use explicit {0} modifier..
        /// </summary>
        internal static string ExplicitAccessModifiersAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExplicitAccessModifiersAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inserts the default accessibility modifier for a declaration..
        /// </summary>
        internal static string ExplicitAccessModifiersAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExplicitAccessModifiersAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option {0} on enum {1} should explicitly specify its value.
        /// </summary>
        internal static string ExplicitEnumValuesAnalyzerMessage {
            get {
                return ResourceManager.GetString("ExplicitEnumValuesAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An enum should explicitly specify its values.
        /// </summary>
        internal static string ExplicitEnumValuesAnalyzerTitle {
            get {
                return ResourceManager.GetString("ExplicitEnumValuesAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Flags] enum {0} its values are not explicit powers of 2.
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoAnalyzerMessage {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A [Flags] enum its values are not explicit powers of 2.
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoAnalyzerTitle {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Flags] enum {0} its values are not explicit powers of 2 and does not fit in a {1} enum type..
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoValuesDontFitAnalyzerMessage {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoValuesDontFitAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A [Flags] enum its values are not explicit powers of 2 and its values dont fit in the specified enum type..
        /// </summary>
        internal static string FlagsEnumValuesAreNotPowersOfTwoValuesDontFitAnalyzerTitle {
            get {
                return ResourceManager.GetString("FlagsEnumValuesAreNotPowersOfTwoValuesDontFitAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string GeneralCategory {
            get {
                return ResourceManager.GetString("GeneralCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GetHashCode() refers to mutable field {0}.
        /// </summary>
        internal static string GetHashCodeRefersToMutableFieldAnalyzerFieldMessage {
            get {
                return ResourceManager.GetString("GetHashCodeRefersToMutableFieldAnalyzerFieldMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GetHashCode() refers to mutable property {0}.
        /// </summary>
        internal static string GetHashCodeRefersToMutableFieldAnalyzerPropertyMessage {
            get {
                return ResourceManager.GetString("GetHashCodeRefersToMutableFieldAnalyzerPropertyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GetHashCode() refers to mutable or static member.
        /// </summary>
        internal static string GetHashCodeRefersToMutableFieldAnalyzerTitle {
            get {
                return ResourceManager.GetString("GetHashCodeRefersToMutableFieldAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} does not implement Equals() and GetHashCode()..
        /// </summary>
        internal static string ImplementEqualsAndGetHashCodeAnalyzerMessage {
            get {
                return ResourceManager.GetString("ImplementEqualsAndGetHashCodeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implements Equals() and GetHashCode() using existing fields and properties..
        /// </summary>
        internal static string ImplementEqualsAndGetHashCodeAnalyzerTitle {
            get {
                return ResourceManager.GetString("ImplementEqualsAndGetHashCodeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable {0} of type System.Random is instantiated in a loop..
        /// </summary>
        internal static string LoopedRandomInstantiationAnalyzerMessage {
            get {
                return ResourceManager.GetString("LoopedRandomInstantiationAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance of type System.Random is created in a loop..
        /// </summary>
        internal static string LoopedRandomInstantiationAnalyzerTitle {
            get {
                return ResourceManager.GetString("LoopedRandomInstantiationAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An empty guid was created in an ambiguous manner.
        /// </summary>
        internal static string NewGuidAnalyzerMessage {
            get {
                return ResourceManager.GetString("NewGuidAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to create empty guid.
        /// </summary>
        internal static string NewGuidAnalyzerTitle {
            get {
                return ResourceManager.GetString("NewGuidAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field {0} should be turned into a property..
        /// </summary>
        internal static string NonEncapsulatedOrMutableFieldAnalyzerMessage {
            get {
                return ResourceManager.GetString("NonEncapsulatedOrMutableFieldAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public or public fields should be immutable or a property..
        /// </summary>
        internal static string NonEncapsulatedOrMutableFieldAnalyzerTitle {
            get {
                return ResourceManager.GetString("NonEncapsulatedOrMutableFieldAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OnPropertyChanged({0}) can use the nameof() operator..
        /// </summary>
        internal static string OnPropertyChangedWithoutNameOfOperatorAnalyzerMessage {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutNameOfOperatorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the nameof() operator in conjunction with OnPropertyChanged().
        /// </summary>
        internal static string OnPropertyChangedWithoutNameOfOperatorAnalyzerTitle {
            get {
                return ResourceManager.GetString("OnPropertyChangedWithoutNameOfOperatorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recursively using overloaded operator.
        /// </summary>
        internal static string RecursiveEqualityOperatorOverloadMessage {
            get {
                return ResourceManager.GetString("RecursiveEqualityOperatorOverloadMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rethrown exception loses the stacktrace..
        /// </summary>
        internal static string RethrowExceptionWithoutLosingStacktraceAnalyzerMessage {
            get {
                return ResourceManager.GetString("RethrowExceptionWithoutLosingStacktraceAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warns when an exception is rethrown in a way that it loses the stacktrace..
        /// </summary>
        internal static string RethrowExceptionWithoutLosingStacktraceAnalyzerTitle {
            get {
                return ResourceManager.GetString("RethrowExceptionWithoutLosingStacktraceAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} can be written using an expression-bodied member.
        /// </summary>
        internal static string SimplifyExpressionBodiedMemberAnalyzerMessage {
            get {
                return ResourceManager.GetString("SimplifyExpressionBodiedMemberAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simplify the expression using an expression-bodied member..
        /// </summary>
        internal static string SimplifyExpressionBodiedMemberAnalyzerTitle {
            get {
                return ResourceManager.GetString("SimplifyExpressionBodiedMemberAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &quot;{0}&quot; has a redundant default constructor..
        /// </summary>
        internal static string SingleEmptyConstructorAnalyzerMessage {
            get {
                return ResourceManager.GetString("SingleEmptyConstructorAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor is the same as a default constructor and can be removed..
        /// </summary>
        internal static string SingleEmptyConstructorAnalyzerTitle {
            get {
                return ResourceManager.GetString("SingleEmptyConstructorAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single catch-all clause has been used. Consider adding specific exception handlers..
        /// </summary>
        internal static string SingleGeneralExceptionAnalyzerMessage {
            get {
                return ResourceManager.GetString("SingleGeneralExceptionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether a try-catch block does not defer all exception handling to a single Exception clause..
        /// </summary>
        internal static string SingleGeneralExceptionAnalyzerTitle {
            get {
                return ResourceManager.GetString("SingleGeneralExceptionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string.Format() call lacks arguments and will cause a runtime exception.
        /// </summary>
        internal static string StringDotFormatWithDifferentAmountOfArgumentsMessage {
            get {
                return ResourceManager.GetString("StringDotFormatWithDifferentAmountOfArgumentsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string.Format() call lacks arguments and will cause a runtime exception..
        /// </summary>
        internal static string StringDotFormatWithDifferentAmountOfArgumentsTitle {
            get {
                return ResourceManager.GetString("StringDotFormatWithDifferentAmountOfArgumentsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to string.Format() Placeholders are not in ascending order..
        /// </summary>
        internal static string StringPlaceholdersInWrongOrderMessage {
            get {
                return ResourceManager.GetString("StringPlaceholdersInWrongOrderMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orders the arguments of a string.Format() call in ascending order according to index..
        /// </summary>
        internal static string StringPlaceholdersInWrongOrderTitle {
            get {
                return ResourceManager.GetString("StringPlaceholdersInWrongOrderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strings.
        /// </summary>
        internal static string StringsCategory {
            get {
                return ResourceManager.GetString("StringsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structs.
        /// </summary>
        internal static string StructsCategory {
            get {
                return ResourceManager.GetString("StructsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Struct {0} should not re-assign &apos;this&apos;..
        /// </summary>
        internal static string StructsShouldNotMutateSelfAnalyzerMessage {
            get {
                return ResourceManager.GetString("StructsShouldNotMutateSelfAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warns when a struct replaces &apos;this&apos; with a new instance..
        /// </summary>
        internal static string StructsShouldNotMutateSelfAnalyzerTitle {
            get {
                return ResourceManager.GetString("StructsShouldNotMutateSelfAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implement Equals(), GetHashCode() and ToString() methods on struct {0}..
        /// </summary>
        internal static string StructWithoutElementaryMethodsOverriddenAnalyzerMessage {
            get {
                return ResourceManager.GetString("StructWithoutElementaryMethodsOverriddenAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Structs should implement Equals(), GetHashCode(), and ToString()..
        /// </summary>
        internal static string StructWithoutElementaryMethodsOverriddenAnalyzerTitle {
            get {
                return ResourceManager.GetString("StructWithoutElementaryMethodsOverriddenAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing enum member in switched cases..
        /// </summary>
        internal static string SwitchDoesNotHandleAllEnumOptionsAnalyzerMessage {
            get {
                return ResourceManager.GetString("SwitchDoesNotHandleAllEnumOptionsAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add cases for missing enum member..
        /// </summary>
        internal static string SwitchDoesNotHandleAllEnumOptionsAnalyzerTitle {
            get {
                return ResourceManager.GetString("SwitchDoesNotHandleAllEnumOptionsAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch should have default label..
        /// </summary>
        internal static string SwitchIsMissingDefaultSectionAnalyzerMessage {
            get {
                return ResourceManager.GetString("SwitchIsMissingDefaultSectionAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch is missing a default label..
        /// </summary>
        internal static string SwitchIsMissingDefaultSectionAnalyzerTitle {
            get {
                return ResourceManager.GetString("SwitchIsMissingDefaultSectionAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronous method &quot;{0}&quot; should not end with &apos;Async&apos;..
        /// </summary>
        internal static string SyncMethodWithAsyncSuffixAnalyzerMessage {
            get {
                return ResourceManager.GetString("SyncMethodWithAsyncSuffixAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non-async, non-Task method should not end with -Async..
        /// </summary>
        internal static string SyncMethodWithAsyncSuffixAnalyzerTitle {
            get {
                return ResourceManager.GetString("SyncMethodWithAsyncSuffixAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test method &quot;{0}&quot; is not public..
        /// </summary>
        internal static string TestMethodWithoutPublicModifierAnalyzerMessage {
            get {
                return ResourceManager.GetString("TestMethodWithoutPublicModifierAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifies whether a test method has the public modifier..
        /// </summary>
        internal static string TestMethodWithoutPublicModifierAnalyzerTitle {
            get {
                return ResourceManager.GetString("TestMethodWithoutPublicModifierAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method {0} might be missing a test attribute.
        /// </summary>
        internal static string TestMethodWithoutTestAttributeAnalyzerMessage {
            get {
                return ResourceManager.GetString("TestMethodWithoutTestAttributeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A method might be missing a test attribute..
        /// </summary>
        internal static string TestMethodWithoutTestAttributeAnalyzerTitle {
            get {
                return ResourceManager.GetString("TestMethodWithoutTestAttributeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tests.
        /// </summary>
        internal static string TestsCategory {
            get {
                return ResourceManager.GetString("TestsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronously sleeping thread in an async method.
        /// </summary>
        internal static string ThreadSleepInAsyncMethodMessage {
            get {
                return ResourceManager.GetString("ThreadSleepInAsyncMethodMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronously sleeping a thread in an async method.
        /// </summary>
        internal static string ThreadSleepInAsyncMethodTitle {
            get {
                return ResourceManager.GetString("ThreadSleepInAsyncMethodTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Throwing null will always result in a runtime exception.
        /// </summary>
        internal static string ThrowNullMessage {
            get {
                return ResourceManager.GetString("ThrowNullMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable {0} can be cast using as/null..
        /// </summary>
        internal static string TryCastWithoutUsingAsNotNullAnalyzerMessage {
            get {
                return ResourceManager.GetString("TryCastWithoutUsingAsNotNullAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use as/null instead of is/as..
        /// </summary>
        internal static string TryCastWithoutUsingAsNotNullAnalyzerTitle {
            get {
                return ResourceManager.GetString("TryCastWithoutUsingAsNotNullAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace the explicit type with &apos;var&apos;.
        /// </summary>
        internal static string TypeToVarAnalyzerMessage {
            get {
                return ResourceManager.GetString("TypeToVarAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use var instead of the explicit type..
        /// </summary>
        internal static string TypeToVarAnalyzerTitle {
            get {
                return ResourceManager.GetString("TypeToVarAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alias {0} instead of concrete type {1}..
        /// </summary>
        internal static string UseAliasesInsteadOfConcreteTypeAnalyzerMessage {
            get {
                return ResourceManager.GetString("UseAliasesInsteadOfConcreteTypeAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the built-in type alias instead of the concrete type..
        /// </summary>
        internal static string UseAliasesInsteadOfConcreteTypeAnalyzerTitle {
            get {
                return ResourceManager.GetString("UseAliasesInsteadOfConcreteTypeAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A using tatement is not delimited with braces..
        /// </summary>
        internal static string UsingStatementWithoutBracesAnalyzerMessage {
            get {
                return ResourceManager.GetString("UsingStatementWithoutBracesAnalyzerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A using statement is missing braces..
        /// </summary>
        internal static string UsingStatementWithoutBracesAnalyzerTitle {
            get {
                return ResourceManager.GetString("UsingStatementWithoutBracesAnalyzerTitle", resourceCulture);
            }
        }
    }
}
